generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Format {
  BOX
  ROLL
  ENVELOPE
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Decimal
  imageUrl    String?
  weight      Decimal  @default(0) @db.Decimal(10, 2) // example: 0.50 kg
  height      Decimal  @default(2) @db.Decimal(10, 2) // Min 2 cm
  width       Decimal  @default(11) @db.Decimal(10, 2) // min 11 cm
  length      Decimal  @default(16) @db.Decimal(10, 2) // min 16 cm
  diameter    Decimal? @default(0) @db.Decimal(10, 2) // 0 if it is not cylindrical

  format Format @default(BOX)

  categoryId Int
  Category   Category @relation(fields: [categoryId], references: [id])

  Stock    Stock?     @relation
  CartItem CartItem[]
}

enum Unit {
  LITER
  KILOGRAM
  UNIT
  METER
  PACKAGE
  PIECE
  TRAY
  DOZEN
  ROLL
  BOX
  ENVELOPE
}

model Stock {
  id           String   @id @default(uuid())
  quantity     Decimal
  unit         Unit     @default(UNIT)
  unitQuantity Decimal?

  productId String  @unique
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  CLIENT
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      Role     @default(CLIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Customer Customer?
}

model Customer {
  id     String  @id @default(uuid())
  phone  String?
  userId String  @unique

  User    User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Address Address[]
  Cart    Cart?
}

model Address {
  id           String  @id @default(uuid())
  street       String
  number       String
  complement   String?
  neighborhood String
  city         String
  state        String
  zipcode      String
  isDefault    Boolean @default(false)

  Customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  imageUrl    String?

  Product Product[]
}

model Cart {
  id String @id @default(uuid())

  Customer   Customer   @relation(fields: [customerId], references: [id])
  customerId String     @unique
  items      CartItem[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model CartItem {
  id       String  @id @default(uuid())
  quantity Int     @default(1)
  total    Decimal @default(0)

  Product   Product @relation(fields: [productId], references: [id])
  productId String
  Cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String

  @@unique([cartId, productId])
}
